{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kisha\\\\OneDrive\\\\Documents\\\\javapractice\\\\traffic-rules-app\\\\src\\\\context\\\\EmergencyContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmergencyContext = /*#__PURE__*/createContext();\nexport const EmergencyProvider = ({\n  children\n}) => {\n  _s();\n  const [emergencyContacts, setEmergencyContacts] = useState([{\n    name: \"Police Control Room\",\n    number: \"100\",\n    type: \"police\"\n  }, {\n    name: \"Ambulance\",\n    number: \"108\",\n    type: \"ambulance\"\n  }, {\n    name: \"Fire Department\",\n    number: \"101\",\n    type: \"fire\"\n  }, {\n    name: \"Women Helpline\",\n    number: \"1091\",\n    type: \"women\"\n  }, {\n    name: \"Child Helpline\",\n    number: \"1098\",\n    type: \"child\"\n  }]);\n  const [userContacts, setUserContacts] = useState([]);\n  const [isPanicMode, setIsPanicMode] = useState(false);\n  const [location, setLocation] = useState(null);\n  const [emergencyHistory, setEmergencyHistory] = useState([]);\n\n  // Load user contacts from localStorage\n  useEffect(() => {\n    const savedContacts = localStorage.getItem(\"emergencyContacts\");\n    if (savedContacts) {\n      setUserContacts(JSON.parse(savedContacts));\n    }\n  }, []);\n  const addEmergencyContact = contact => {\n    const newContacts = [...userContacts, contact];\n    setUserContacts(newContacts);\n    localStorage.setItem(\"emergencyContacts\", JSON.stringify(newContacts));\n  };\n  const removeEmergencyContact = index => {\n    const newContacts = userContacts.filter((_, i) => i !== index);\n    setUserContacts(newContacts);\n    localStorage.setItem(\"emergencyContacts\", JSON.stringify(newContacts));\n  };\n  const startPanicMode = () => {\n    setIsPanicMode(true);\n    // Start sending location updates every 30 seconds\n    const interval = setInterval(() => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(position => {\n          const newLocation = {\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude,\n            timestamp: new Date().toISOString()\n          };\n          setLocation(newLocation);\n          // Here you would send this to your backend\n          console.log(\"Sending location update:\", newLocation);\n        }, error => console.error(\"Error getting location:\", error), {\n          enableHighAccuracy: true\n        });\n      }\n    }, 30000);\n    return () => clearInterval(interval);\n  };\n  const stopPanicMode = () => {\n    setIsPanicMode(false);\n  };\n  const logEmergency = (type, details) => {\n    const newEmergency = {\n      type,\n      details,\n      timestamp: new Date().toISOString(),\n      location: location\n    };\n    setEmergencyHistory(prev => [...prev, newEmergency]);\n    // Here you would send this to your backend\n    console.log(\"Logging emergency:\", newEmergency);\n  };\n  return /*#__PURE__*/_jsxDEV(EmergencyContext.Provider, {\n    value: {\n      emergencyContacts,\n      userContacts,\n      addEmergencyContact,\n      removeEmergencyContact,\n      isPanicMode,\n      startPanicMode,\n      stopPanicMode,\n      location,\n      setLocation,\n      emergencyHistory,\n      logEmergency\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(EmergencyProvider, \"Qd2JLR47tjL67HaxP/NI3ykVU/c=\");\n_c = EmergencyProvider;\nexport const useEmergency = () => {\n  _s2();\n  return useContext(EmergencyContext);\n};\n_s2(useEmergency, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"EmergencyProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","EmergencyContext","EmergencyProvider","children","_s","emergencyContacts","setEmergencyContacts","name","number","type","userContacts","setUserContacts","isPanicMode","setIsPanicMode","location","setLocation","emergencyHistory","setEmergencyHistory","savedContacts","localStorage","getItem","JSON","parse","addEmergencyContact","contact","newContacts","setItem","stringify","removeEmergencyContact","index","filter","_","i","startPanicMode","interval","setInterval","navigator","geolocation","getCurrentPosition","position","newLocation","latitude","coords","longitude","timestamp","Date","toISOString","console","log","error","enableHighAccuracy","clearInterval","stopPanicMode","logEmergency","details","newEmergency","prev","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useEmergency","_s2","$RefreshReg$"],"sources":["C:/Users/kisha/OneDrive/Documents/javapractice/traffic-rules-app/src/context/EmergencyContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from \"react\";\r\n\r\nconst EmergencyContext = createContext();\r\n\r\nexport const EmergencyProvider = ({ children }) => {\r\n  const [emergencyContacts, setEmergencyContacts] = useState([\r\n    { name: \"Police Control Room\", number: \"100\", type: \"police\" },\r\n    { name: \"Ambulance\", number: \"108\", type: \"ambulance\" },\r\n    { name: \"Fire Department\", number: \"101\", type: \"fire\" },\r\n    { name: \"Women Helpline\", number: \"1091\", type: \"women\" },\r\n    { name: \"Child Helpline\", number: \"1098\", type: \"child\" },\r\n  ]);\r\n  const [userContacts, setUserContacts] = useState([]);\r\n  const [isPanicMode, setIsPanicMode] = useState(false);\r\n  const [location, setLocation] = useState(null);\r\n  const [emergencyHistory, setEmergencyHistory] = useState([]);\r\n\r\n  // Load user contacts from localStorage\r\n  useEffect(() => {\r\n    const savedContacts = localStorage.getItem(\"emergencyContacts\");\r\n    if (savedContacts) {\r\n      setUserContacts(JSON.parse(savedContacts));\r\n    }\r\n  }, []);\r\n\r\n  const addEmergencyContact = (contact) => {\r\n    const newContacts = [...userContacts, contact];\r\n    setUserContacts(newContacts);\r\n    localStorage.setItem(\"emergencyContacts\", JSON.stringify(newContacts));\r\n  };\r\n\r\n  const removeEmergencyContact = (index) => {\r\n    const newContacts = userContacts.filter((_, i) => i !== index);\r\n    setUserContacts(newContacts);\r\n    localStorage.setItem(\"emergencyContacts\", JSON.stringify(newContacts));\r\n  };\r\n\r\n  const startPanicMode = () => {\r\n    setIsPanicMode(true);\r\n    // Start sending location updates every 30 seconds\r\n    const interval = setInterval(() => {\r\n      if (navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition(\r\n          (position) => {\r\n            const newLocation = {\r\n              latitude: position.coords.latitude,\r\n              longitude: position.coords.longitude,\r\n              timestamp: new Date().toISOString(),\r\n            };\r\n            setLocation(newLocation);\r\n            // Here you would send this to your backend\r\n            console.log(\"Sending location update:\", newLocation);\r\n          },\r\n          (error) => console.error(\"Error getting location:\", error),\r\n          { enableHighAccuracy: true }\r\n        );\r\n      }\r\n    }, 30000);\r\n\r\n    return () => clearInterval(interval);\r\n  };\r\n\r\n  const stopPanicMode = () => {\r\n    setIsPanicMode(false);\r\n  };\r\n\r\n  const logEmergency = (type, details) => {\r\n    const newEmergency = {\r\n      type,\r\n      details,\r\n      timestamp: new Date().toISOString(),\r\n      location: location,\r\n    };\r\n    setEmergencyHistory((prev) => [...prev, newEmergency]);\r\n    // Here you would send this to your backend\r\n    console.log(\"Logging emergency:\", newEmergency);\r\n  };\r\n\r\n  return (\r\n    <EmergencyContext.Provider\r\n      value={{\r\n        emergencyContacts,\r\n        userContacts,\r\n        addEmergencyContact,\r\n        removeEmergencyContact,\r\n        isPanicMode,\r\n        startPanicMode,\r\n        stopPanicMode,\r\n        location,\r\n        setLocation,\r\n        emergencyHistory,\r\n        logEmergency,\r\n      }}\r\n    >\r\n      {children}\r\n    </EmergencyContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useEmergency = () => useContext(EmergencyContext);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}