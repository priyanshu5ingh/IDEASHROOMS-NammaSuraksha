{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kisha\\\\OneDrive\\\\Documents\\\\javapractice\\\\traffic-rules-app\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Check for stored session\n    const storedUser = localStorage.getItem(\"policeUser\");\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n    }\n    setLoading(false);\n  }, []);\n  const login = async (badgeNumber, password) => {\n    try {\n      // Here you would make an API call to verify credentials\n      // For demo purposes, we'll use mock data\n      const mockOfficer = {\n        id: \"12345\",\n        name: \"Officer John Doe\",\n        badgeNumber: badgeNumber,\n        rank: \"Inspector\",\n        station: \"Central Police Station\",\n        permissions: [\"view_emergencies\", \"respond_emergencies\", \"manage_cases\"]\n      };\n      setUser(mockOfficer);\n      localStorage.setItem(\"policeUser\", JSON.stringify(mockOfficer));\n      navigate(\"/emergency-dashboard\");\n    } catch (error) {\n      console.error(\"Login failed:\", error);\n      throw error;\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem(\"policeUser\");\n    navigate(\"/login\");\n  };\n  const hasPermission = permission => {\n    var _user$permissions;\n    return (user === null || user === void 0 ? void 0 : (_user$permissions = user.permissions) === null || _user$permissions === void 0 ? void 0 : _user$permissions.includes(permission)) || false;\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      login,\n      logout,\n      hasPermission\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"lk6viekuCMMpYORkLYLEq0Wsfds=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","useNavigate","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","navigate","storedUser","localStorage","getItem","JSON","parse","login","badgeNumber","password","mockOfficer","id","name","rank","station","permissions","setItem","stringify","error","console","logout","removeItem","hasPermission","permission","_user$permissions","includes","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/kisha/OneDrive/Documents/javapractice/traffic-rules-app/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Check for stored session\r\n    const storedUser = localStorage.getItem(\"policeUser\");\r\n    if (storedUser) {\r\n      setUser(JSON.parse(storedUser));\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (badgeNumber, password) => {\r\n    try {\r\n      // Here you would make an API call to verify credentials\r\n      // For demo purposes, we'll use mock data\r\n      const mockOfficer = {\r\n        id: \"12345\",\r\n        name: \"Officer John Doe\",\r\n        badgeNumber: badgeNumber,\r\n        rank: \"Inspector\",\r\n        station: \"Central Police Station\",\r\n        permissions: [\r\n          \"view_emergencies\",\r\n          \"respond_emergencies\",\r\n          \"manage_cases\",\r\n        ],\r\n      };\r\n\r\n      setUser(mockOfficer);\r\n      localStorage.setItem(\"policeUser\", JSON.stringify(mockOfficer));\r\n      navigate(\"/emergency-dashboard\");\r\n    } catch (error) {\r\n      console.error(\"Login failed:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem(\"policeUser\");\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  const hasPermission = (permission) => {\r\n    return user?.permissions?.includes(permission) || false;\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        loading,\r\n        login,\r\n        logout,\r\n        hasPermission,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMc,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd;IACA,MAAMa,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IACrD,IAAIF,UAAU,EAAE;MACdJ,OAAO,CAACO,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,CAAC;IACjC;IACAF,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,KAAK,GAAG,MAAAA,CAAOC,WAAW,EAAEC,QAAQ,KAAK;IAC7C,IAAI;MACF;MACA;MACA,MAAMC,WAAW,GAAG;QAClBC,EAAE,EAAE,OAAO;QACXC,IAAI,EAAE,kBAAkB;QACxBJ,WAAW,EAAEA,WAAW;QACxBK,IAAI,EAAE,WAAW;QACjBC,OAAO,EAAE,wBAAwB;QACjCC,WAAW,EAAE,CACX,kBAAkB,EAClB,qBAAqB,EACrB,cAAc;MAElB,CAAC;MAEDjB,OAAO,CAACY,WAAW,CAAC;MACpBP,YAAY,CAACa,OAAO,CAAC,YAAY,EAAEX,IAAI,CAACY,SAAS,CAACP,WAAW,CAAC,CAAC;MAC/DT,QAAQ,CAAC,sBAAsB,CAAC;IAClC,CAAC,CAAC,OAAOiB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrC,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAME,MAAM,GAAGA,CAAA,KAAM;IACnBtB,OAAO,CAAC,IAAI,CAAC;IACbK,YAAY,CAACkB,UAAU,CAAC,YAAY,CAAC;IACrCpB,QAAQ,CAAC,QAAQ,CAAC;EACpB,CAAC;EAED,MAAMqB,aAAa,GAAIC,UAAU,IAAK;IAAA,IAAAC,iBAAA;IACpC,OAAO,CAAA3B,IAAI,aAAJA,IAAI,wBAAA2B,iBAAA,GAAJ3B,IAAI,CAAEkB,WAAW,cAAAS,iBAAA,uBAAjBA,iBAAA,CAAmBC,QAAQ,CAACF,UAAU,CAAC,KAAI,KAAK;EACzD,CAAC;EAED,oBACE/B,OAAA,CAACC,WAAW,CAACiC,QAAQ;IACnBC,KAAK,EAAE;MACL9B,IAAI;MACJE,OAAO;MACPQ,KAAK;MACLa,MAAM;MACNE;IACF,CAAE;IAAA3B,QAAA,EAEDA;EAAQ;IAAAiC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACnC,EAAA,CA/DWF,YAAY;EAAA,QAGNJ,WAAW;AAAA;AAAA0C,EAAA,GAHjBtC,YAAY;AAiEzB,OAAO,MAAMuC,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM9C,UAAU,CAACK,WAAW,CAAC;AAAA;AAACyC,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}